# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
##spring.datasource.url= jdbc:mysql://localhost:3306/test
##spring.datasource.username=root
##spring.datasource.password= zideon@2015
##spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
##spring.datasource.testWhileIdle = true
##spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
##spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
##spring.jpa.hibernate.ddl-auto = update

# Naming strategy
##spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
##spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Number of ms to wait before throwing an exception if no connection is available.
##spring.datasource.max-wait=10000
# Maximum number of active connections that can be allocated from this pool at the same time.
##spring.datasource.max-active=50
# Validate the connection before borrowing it from the pool.
##spring.datasource.test-on-borrow=true


# ThymeLeaf
spring.thymeleaf.cache: false
#spring.thymeleaf.mode=LEGACYHTML5